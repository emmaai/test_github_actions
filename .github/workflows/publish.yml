name: Test publish

on:
  release:
    types: [published]

jobs:
  set_dev_tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build a new docker image with tag
        id: tag-image
        run: |
          echo "TAG=dev$(git rev-parse --short HEAD)" \
          >> $GITHUB_OUTPUT
    outputs:
      image_tag: ${{ steps.tag-image.outputs.TAG }}

  set_release_tags:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build a new docker image with tag
        id: tag-image
        run: |
          echo "TAG=${{ github.ref_name }}" \
          >> $GITHUB_OUTPUT
    outputs:
      image_tag: ${{ steps.tag-image.outputs.TAG }}

  publish_new_version:
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [set_dev_tags, set_release_tags]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Get image tag
        id: tag-image
        run: |
          if [[ ! -z "${{ needs.set_dev_tags.outputs.image_tag }}" ]]; then \
          tag="${{ needs.set_dev_tags.outputs.image_tag }}"; fi
          if [[ ! -z "${{ needs.set_release_tags.outputs.image_tag }}" ]]; then \
          if [[ ! -z $tag ]]; then tag=$tag",${{ needs.set_release_tags.outputs.image_tag }}"; else \
          tag="${{ needs.set_release_tags.outputs.image_tag }}"; fi \
          fi
          echo "TAG=$tag" >>  $GITHUB_OUTPUT
      - run: |
          echo "TAG=${{ steps.tag-image.outputs.TAG }}"
